package ru.netology.nmedia.repository

import androidx.lifecycle.LiveData
import androidx.lifecycle.MutableLiveData
import ru.netology.nmedia.dto.Post

class PostRepositoryInMemoryImpl : PostRepository {

    private var index: Long = 1L
    private var posts = listOf(
        Post(
            id = index++,
            author = "–ù–µ—Ç–æ–ª–æ–≥–∏—è. –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–ø—Ä–æ—Ñ–µ—Å—Å–∏–π –±—É–¥—É—â–µ–≥–æ",
            published = "21 –º–∞—è –≤ 18:36",
            content = "–ü—Ä–∏–≤–µ—Ç, —ç—Ç–æ –Ω–æ–≤–∞—è –ù–µ—Ç–æ–ª–æ–≥–∏—è! –ö–æ–≥–¥–∞-—Ç–æ –ù–µ—Ç–æ–ª–æ–≥–∏—è –Ω–∞—á–∏–Ω–∞–ª–∞—Å—å —Å –∏–Ω—Ç–µ–Ω—Å–∏–≤–æ–≤ –ø–æ –æ–Ω–ª–∞–π–Ω-–º–∞—Ä–∫–µ—Ç–∏–Ω–≥—É. –ó–∞—Ç–µ–º –ø–æ—è–≤–∏–ª–∏—Å—å –∫—É—Ä—Å—ã –ø–æ –¥–∏–∑–∞–π–Ω—É, —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ, –∞–Ω–∞–ª–∏—Ç–∏–∫–µ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é. –ú—ã —Ä–∞—Å—Ç—ë–º —Å–∞–º–∏ –∏ –ø–æ–º–æ–≥–∞–µ–º —Ä–∞—Å—Ç–∏ —Å—Ç—É–¥–µ–Ω—Ç–∞–º: –æ—Ç –Ω–æ–≤–∏—á–∫–æ–≤ –¥–æ —É–≤–µ—Ä–µ–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–≤. –ù–æ —Å–∞–º–æ–µ –≤–∞–∂–Ω–æ–µ –æ—Å—Ç–∞—ë—Ç—Å—è —Å –Ω–∞–º–∏: –º—ã –≤–µ—Ä–∏–º, —á—Ç–æ –≤ –∫–∞–∂–¥–æ–º —É–∂–µ –µ—Å—Ç—å —Å–∏–ª–∞, –∫–æ—Ç–æ—Ä–∞—è –∑–∞—Å—Ç–∞–≤–ª—è–µ—Ç —Ö–æ—Ç–µ—Ç—å –±–æ–ª—å—à–µ, —Ü–µ–ª–∏—Ç—å—Å—è –≤—ã—à–µ, –±–µ–∂–∞—Ç—å –±—ã—Å—Ç—Ä–µ–µ. –ù–∞—à–∞ –º–∏—Å—Å–∏—è ‚Äî –ø–æ–º–æ—á—å –≤—Å—Ç–∞—Ç—å –Ω–∞ –ø—É—Ç—å —Ä–æ—Å—Ç–∞ –∏ –Ω–∞—á–∞—Ç—å —Ü–µ–ø–æ—á–∫—É –ø–µ—Ä–µ–º–µ–Ω ‚Üí http://netolo.gy/fyb",
            likeByMe = false
        ),
        Post(
            id = index++,
            author = "–ù–µ—Ç–æ–ª–æ–≥–∏—è. –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–ø—Ä–æ—Ñ–µ—Å—Å–∏–π –±—É–¥—É—â–µ–≥–æ",
            published = "22 –º–∞—è –≤ 12:22",
            content = "–ö–∞–∫ –æ—Ç–ª–∏—á–∏—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞-–∏–Ω—Ç—Ä–æ–≤–µ—Ä—Ç–∞ –æ—Ç —ç–∫—Å—Ç—Ä–∞–≤–µ—Ä—Ç–∞?\n" +
                    "–ò–Ω—Ç—Ä–æ–≤–µ—Ä—Ç —Å–º–æ—Ç—Ä–∏—Ç –Ω–∞ —Å–≤–æ–∏ –±–æ—Ç–∏–Ω–∫–∏, –∫–æ–≥–¥–∞ —Å —Ç–æ–±–æ–π —Ä–∞–∑–≥–æ–≤–∞—Ä–∏–≤–∞–µ—Ç.\n" +
                    "–≠–∫—Å—Ç—Ä–∞–≤–µ—Ä—Ç ‚Äî –Ω–∞ —Ç–≤–æ–∏.",
            video = "https://youtu.be/xT8oP0wy-A0?si=Y2_Lv2RA4PXPwxIa",
            likeByMe = false
        ),
        Post(
            id = index++,
            author = "–ù–µ—Ç–æ–ª–æ–≥–∏—è. –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–ø—Ä–æ—Ñ–µ—Å—Å–∏–π –±—É–¥—É—â–µ–≥–æ",
            published = "23 –º–∞—è –≤ 10:05",
            content = "UX ‚Äî —ç—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ –∫—Ä–∞—Å–∏–≤–æ. –≠—Ç–æ –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞–º–µ—á–∞–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å, –ø–æ—Ç–æ–º—É —á—Ç–æ –≤—Å—ë —Ä–∞–±–æ—Ç–∞–µ—Ç –∏–Ω—Ç—É–∏—Ç–∏–≤–Ω–æ. –ü–æ–º–Ω–∏—Ç–µ: —Ö–æ—Ä–æ—à–æ ‚Äî –∫–æ–≥–¥–∞ –Ω–µ–∑–∞–º–µ—Ç–Ω–æ.",
            likeByMe = false
        ),
        Post(
            id = index++,
            author = "–ù–µ—Ç–æ–ª–æ–≥–∏—è. –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–ø—Ä–æ—Ñ–µ—Å—Å–∏–π –±—É–¥—É—â–µ–≥–æ",
            published = "24 –º–∞—è –≤ 15:42",
            content = "–ö–∞–∫ –ø–æ–Ω—è—Ç—å, —á—Ç–æ —Ç—ã —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫? –¢—ã –Ω–µ –¥–æ–≤–µ—Ä—è–µ—à—å —Å–µ–±–µ, –ø–æ–∫–∞ –Ω–µ —É–≤–∏–¥–∏—à—å `green` –≤ —Ç–µ—Å—Ç–∞—Ö.",
            likeByMe = false
        ),
        Post(
            id = index++,
            author = "–ù–µ—Ç–æ–ª–æ–≥–∏—è. –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–ø—Ä–æ—Ñ–µ—Å—Å–∏–π –±—É–¥—É—â–µ–≥–æ",
            published = "25 –º–∞—è –≤ 09:13",
            content = "–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥ ‚Äî —ç—Ç–æ –Ω–µ —É–≥–æ–≤–æ—Ä–∏—Ç—å –∫—É–ø–∏—Ç—å. –≠—Ç–æ –ø–æ–º–æ—á—å –ø–æ–Ω—è—Ç—å, –ø–æ—á–µ–º—É —á–µ–ª–æ–≤–µ–∫—É —ç—Ç–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –Ω—É–∂–Ω–æ. –£—á–∏–º—Å—è –≥–æ–≤–æ—Ä–∏—Ç—å –Ω–∞ —è–∑—ã–∫–µ –∞—É–¥–∏—Ç–æ—Ä–∏–∏.",
            likeByMe = false
        ),
        Post(
            id = index++,
            author = "–ù–µ—Ç–æ–ª–æ–≥–∏—è. –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–ø—Ä–æ—Ñ–µ—Å—Å–∏–π –±—É–¥—É—â–µ–≥–æ",
            published = "26 –º–∞—è –≤ 14:27",
            content = "–†–∞–Ω—å—à–µ –∑–Ω–∞–Ω–∏–µ Excel –æ—Ç–∫—Ä—ã–≤–∞–ª–æ –¥–≤–µ—Ä–∏. –°–µ–π—á–∞—Å ‚Äî SQL, Python –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞. –ú–∏—Ä –º–µ–Ω—è–µ—Ç—Å—è, –∏ –º—ã —É—á–∏–º –±—ã—Ç—å –Ω—É–∂–Ω—ã–º–∏.",
            likeByMe = false
        ),
        Post(
            id = index++,
            author = "–ù–µ—Ç–æ–ª–æ–≥–∏—è. –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–ø—Ä–æ—Ñ–µ—Å—Å–∏–π –±—É–¥—É—â–µ–≥–æ",
            published = "27 –º–∞—è –≤ 17:00",
            content = "¬´–í—Å—ë —É–∂–µ –ø—Ä–∏–¥—É–º–∞–Ω–æ –¥–æ –Ω–∞—Å¬ª ‚Äî –ø–ª–æ—Ö–∞—è –æ—Ç–º–∞–∑–∫–∞, —á—Ç–æ–±—ã –Ω–µ –Ω–∞—á–∏–Ω–∞—Ç—å. –°–∞–º—ã–µ —É—Å–ø–µ—à–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã ‚Äî —ç—Ç–æ —á–∞—Å—Ç–æ –ø—Ä–æ—Å—Ç—ã–µ –∏–¥–µ–∏, —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–µ –≤–æ–≤—Ä–µ–º—è.",
            likeByMe = false
        ),
        Post(
            id = index++,
            author = "–ù–µ—Ç–æ–ª–æ–≥–∏—è. –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–ø—Ä–æ—Ñ–µ—Å—Å–∏–π –±—É–¥—É—â–µ–≥–æ",
            published = "28 –º–∞—è –≤ 11:44",
            content = "–°–æ–≤–µ—Ç –¥–∂—É–Ω—É: –Ω–µ –±–æ–π—Å—è –ø—Ä–æ—Å–∏—Ç—å –ø–æ–º–æ—â–∏. –°–µ–Ω—å–æ—Ä—ã –Ω–µ –∫—É—Å–∞—é—Ç—Å—è. (–ü–æ–∫–∞ –Ω–µ –≤–∏–¥—è—Ç `var a = 1` –≤ –ø—Ä–æ–¥–µ üòÖ)",
            likeByMe = false
        ),
        Post(
            id = index++,
            author = "–ù–µ—Ç–æ–ª–æ–≥–∏—è. –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–ø—Ä–æ—Ñ–µ—Å—Å–∏–π –±—É–¥—É—â–µ–≥–æ",
            published = "29 –º–∞—è –≤ 13:37",
            content = "–ó–Ω–∞–Ω–∏—è –Ω–µ —É—Å—Ç–∞—Ä–µ–≤–∞—é—Ç ‚Äî —É—Å—Ç–∞—Ä–µ–≤–∞—é—Ç –ø–æ–¥—Ö–æ–¥—ã. –û–±—É—á–µ–Ω–∏–µ –≤—Å—é –∂–∏–∑–Ω—å ‚Äî –Ω–µ –º–æ–¥–Ω—ã–π —Ç—Ä–µ–Ω–¥, –∞ –∂–∏–∑–Ω–µ–Ω–Ω–∞—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å.",
            likeByMe = false
        )
    )

    private val data = MutableLiveData(posts)

    override fun get(): LiveData<List<Post>> = data

    override fun like(id: Long) {
        posts = posts.map { post ->
            if (post.id == id) {
                post.copy(
                    likeByMe = !post.likeByMe,
                    likes = if (post.likeByMe) post.likes - 1 else post.likes + 1
                )
            } else {
                post
            }
        }
        data.value = posts
    }

    override fun share(id: Long) {
        posts = posts.map { post ->
            if (post.id == id) {
                post.copy(shares = post.shares + 1)
            } else {
                post
            }
        }
        data.value = posts
    }

    override fun removeById(id: Long) {
        posts = posts.filter { it.id != id }
        data.value = posts
    }

    override fun save(post: Post) {
        if (post.id == 0L) {
            posts = listOf(
                post.copy(
                    id = index++,
                    author = "Me",
                    published = "now"

                )
            ) + posts
            data.value = posts
        } else {
            posts = posts.map {
                if (post.id == it.id) {
                    it.copy(content = post.content)
                } else it
            }
        }
        data.value = posts
    }
}